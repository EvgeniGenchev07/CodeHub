<!DOCTYPE html>
<html lang="bg">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>CodeBattle Admin - Форуми</title>
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">
    <link rel="stylesheet" href="~/css/admin_forum.css" />
</head>
<body>
    <!-- Header -->
    <header>
        <div class="logo">
            <span class="logo-icon"><i class="fas fa-code"></i></span>
            <span class="logo-text">CodeBattle <span class="admin-badge">ADMIN</span></span>
        </div>

        <button class="hamburger" id="hamburger">
            <i class="fas fa-bars"></i>
        </button>
    </header>

    <!-- Admin Navigation -->
    <nav class="admin-nav" id="admin-nav">
        <ul class="admin-nav-links">
            <li><a href="#"><i class="fas fa-tachometer-alt"></i> Табло</a></li>
            <li><a href="#battles"><i class="fas fa-trophy"></i> Двубои</a></li>
            <li><a href="#courses"><i class="fas fa-graduation-cap"></i> Курсове</a></li>
            <li><a href="#forums" class="active"><i class="fas fa-comments"></i> Форуми</a></li>
            <li><a href="#users"><i class="fas fa-users"></i> Потребители</a></li>
            <li><a href="#settings"><i class="fas fa-cog"></i> Настройки</a></li>
        </ul>
    </nav>

    <!-- Main Content -->
    <main class="admin-main">
        <!-- Content -->
        <div class="admin-content">
            <section id="forums">
                <div class="admin-header">
                    <h1 class="admin-title">Форумни дискусии</h1>
                    <div class="button-group">
                        <button class="btn btn-primary" id="createPostBtn"><i class="fas fa-plus"></i> Нов пост</button>
                    </div>
                </div>

                <!-- Forum Posts -->
                <div class="forum-container" id="forumPosts">
                    <div class="loading-indicator" id="loadingIndicator">
                        <i class="fas fa-spinner fa-spin"></i> Зареждане на постове...
                    </div>
                </div>

                <!-- Pagination -->
                <div class="pagination-container">
                    <ul class="pagination" id="pagination"></ul>
                </div>
            </section>
        </div>
    </main>

    <!-- Add Post Modal -->
    <div class="modal" id="addPostModal">
        <div class="modal-content">
            <div class="modal-header">
                <h3 class="modal-title">Създаване на нов пост</h3>
                <button class="close-modal" id="closeAddPostModal">&times;</button>
            </div>
            <form id="addPostForm">
                <div class="form-group">
                    <label class="form-label">Заглавие</label>
                    <input type="text" class="form-control" id="postTitle" required>
                </div>
                <div class="form-group">
                    <label class="form-label">Съдържание</label>
                    <textarea class="form-control" id="postContent" rows="5" required></textarea>
                </div>
                <div class="form-footer">
                    <button type="button" class="btn btn-outline" id="cancelAddPost">Отказ</button>
                    <button type="submit" class="btn btn-primary">Публикувай</button>
                </div>
            </form>
        </div>
    </div>

    <script>
        // Global variables
        let currentPage = 1;
        const itemsPerPage = 5;

        // Initialize when DOM is loaded
        document.addEventListener('DOMContentLoaded', function() {
            initializeNavigation();
            setupEventListeners();
            loadForumPosts();
        });

        // Initialize navigation menu
        function initializeNavigation() {
            const hamburger = document.getElementById('hamburger');
            const adminNav = document.getElementById('admin-nav');

            hamburger.addEventListener('click', function() {
                adminNav.classList.toggle('active');
                const icon = this.querySelector('i');
                icon.classList.toggle('fa-bars');
                icon.classList.toggle('fa-times');
            });

            document.addEventListener('click', function(event) {
                if (!adminNav.contains(event.target) && !hamburger.contains(event.target)) {
                    adminNav.classList.remove('active');
                    hamburger.querySelector('i').classList.add('fa-bars');
                    hamburger.querySelector('i').classList.remove('fa-times');
                }
            });
        }

        // Setup all event listeners
        function setupEventListeners() {
            // Post modal
            document.getElementById('createPostBtn').addEventListener('click', openAddPostModal);
            document.getElementById('closeAddPostModal').addEventListener('click', closeAddPostModal);
            document.getElementById('cancelAddPost').addEventListener('click', closeAddPostModal);
            document.getElementById('addPostForm').addEventListener('submit', addNewPost);
        }

        // Main function to load forum posts
        async function loadForumPosts() {
            showLoading(true);

            try {
                const forumPosts = await fetchForumPosts();
                renderForumPosts(forumPosts);
            } catch (error) {
                console.error('Error loading forum posts:', error);
                showError('Грешка при зареждане на постове');
            } finally {
                showLoading(false);
            }
        }

              async function fetchForumPosts() {
            try {
                const response = await fetch('/Admin/GetAllForumPosts', {
                    method: 'GET',
                    headers: {
                        'Content-Type': 'application/json',
                    }
                });

                if (!response.ok) {
                    throw new Error(`HTTP error! Status: ${response.status}`);
                }

                const forumPosts = await response.json();
                return forumPosts;
            } catch (error) {
                console.error('Error fetching forum posts:', error);
                throw error; // Let the calling function handle the error
            }
        }

        // Render posts to the page
        function renderForumPosts(posts) {
            const forumContainer = document.getElementById('forumPosts');
            const pagination = document.getElementById('pagination');

            // Clear existing content
            forumContainer.innerHTML = '';
            pagination.innerHTML = '';

            if (!posts || posts.length === 0) {
                forumContainer.innerHTML = '<p class="no-posts">Няма налични постове.</p>';
                return;
            }

            // Calculate pagination
            const totalPages = Math.ceil(posts.length / itemsPerPage);
            const startIndex = (currentPage - 1) * itemsPerPage;
            const endIndex = Math.min(startIndex + itemsPerPage, posts.length);
            const currentPosts = posts.slice(startIndex, endIndex);

            // Render each post
            currentPosts.forEach(post => {
                const postElement = createPostElement(post);
                forumContainer.appendChild(postElement);
            });

            // Render pagination
            renderPagination(totalPages);
        }

        // Create HTML element for a single post
        function createPostElement(post) {
            const postDate = new Date(post.date);
            const formattedDate = formatDate(postDate);

            const postElement = document.createElement('div');
            postElement.className = 'forum-post';
            postElement.innerHTML = `
                <div class="post-header">
                    <div class="post-author">
                        <div class="author-avatar">${getInitials(post.author?.userName || 'Unknown')}</div>
                        <div class="author-info">
                            <span class="author-name">${post.author?.userName || 'Анонимен'}</span>
                            <span class="post-date">${formattedDate}</span>
                        </div>
                    </div>
                </div>
                <h3 class="post-title">${escapeHtml(post.title)}</h3>
                <div class="post-content-preview">${formatContent(post.content)}</div>
                <div class="post-actions">
                    <a href="/Forum/Details?id=${post.id}" class="btn-link read-more">
                        Прочети повече <i class="fas fa-chevron-right"></i>
                    </a>
                </div>
            `;

            return postElement;
        }

        // Render pagination controls
        function renderPagination(totalPages) {
            const pagination = document.getElementById('pagination');

            if (totalPages <= 1) return;

            // Previous button
            const prevItem = document.createElement('li');
            prevItem.className = 'page-item';
            prevItem.innerHTML = `
                <a href="#" class="page-link ${currentPage === 1 ? 'disabled' : ''}"
                   onclick="${currentPage === 1 ? 'return false;' : `changePage(${currentPage - 1}); return false;`}">
                    <i class="fas fa-chevron-left"></i>
                </a>
            `;
            pagination.appendChild(prevItem);

            // Page numbers
            const maxVisiblePages = 5;
            let startPage = Math.max(1, currentPage - Math.floor(maxVisiblePages / 2));
            let endPage = Math.min(totalPages, startPage + maxVisiblePages - 1);

            if (endPage - startPage + 1 < maxVisiblePages) {
                startPage = Math.max(1, endPage - maxVisiblePages + 1);
            }

            // First page and ellipsis if needed
            if (startPage > 1) {
                const firstItem = document.createElement('li');
                firstItem.className = 'page-item';
                firstItem.innerHTML = `<a href="#" class="page-link" onclick="changePage(1); return false;">1</a>`;
                pagination.appendChild(firstItem);

                if (startPage > 2) {
                    const dotsItem = document.createElement('li');
                    dotsItem.className = 'page-item';
                    dotsItem.innerHTML = `<span class="page-link disabled">...</span>`;
                    pagination.appendChild(dotsItem);
                }
            }

            // Page numbers
            for (let i = startPage; i <= endPage; i++) {
                const pageItem = document.createElement('li');
                pageItem.className = 'page-item';
                pageItem.innerHTML = `
                    <a href="#" class="page-link ${i === currentPage ? 'active' : ''}"
                       onclick="changePage(${i}); return false;">${i}</a>
                `;
                pagination.appendChild(pageItem);
            }

            // Last page and ellipsis if needed
            if (endPage < totalPages) {
                if (endPage < totalPages - 1) {
                    const dotsItem = document.createElement('li');
                    dotsItem.className = 'page-item';
                    dotsItem.innerHTML = `<span class="page-link disabled">...</span>`;
                    pagination.appendChild(dotsItem);
                }

                const lastItem = document.createElement('li');
                lastItem.className = 'page-item';
                lastItem.innerHTML = `<a href="#" class="page-link" onclick="changePage(${totalPages}); return false;">${totalPages}</a>`;
                pagination.appendChild(lastItem);
            }

            // Next button
            const nextItem = document.createElement('li');
            nextItem.className = 'page-item';
            nextItem.innerHTML = `
                <a href="#" class="page-link ${currentPage === totalPages ? 'disabled' : ''}"
                   onclick="${currentPage === totalPages ? 'return false;' : `changePage(${currentPage + 1}); return false;`}">
                    <i class="fas fa-chevron-right"></i>
                </a>
            `;
            pagination.appendChild(nextItem);
        }

        // Change page function
        function changePage(page) {
            currentPage = page;
            loadForumPosts();
            window.scrollTo({ top: 0, behavior: 'smooth' });
        }

        // Modal functions
        function openAddPostModal() {
            document.getElementById('addPostModal').classList.add('active');
        }

        function closeAddPostModal() {
            document.getElementById('addPostModal').classList.remove('active');
            document.getElementById('addPostForm').reset();
        }

        // Form submission handlers
        async function addNewPost(e) {
            e.preventDefault();

            const title = document.getElementById('postTitle').value.trim();
            const content = document.getElementById('postContent').value.trim();

            if (!title || !content) {
                alert('Моля, попълнете всички полета!');
                return;
            }

            try {
                // Simulate API call
                console.log('Creating new post:', { title, content });

                closeAddPostModal();
                loadForumPosts();
                alert('Постът беше публикуван успешно!');
            } catch (error) {
                console.error('Error creating post:', error);
                alert(`Грешка при публикуване на пост: ${error.message}`);
            }
        }

        // Helper functions
        function formatDate(date) {
            return date.toLocaleDateString('bg-BG', {
                day: '2-digit',
                month: '2-digit',
                year: 'numeric',
                hour: '2-digit',
                minute: '2-digit'
            });
        }

        function getInitials(name) {
            return name.split(' ').map(part => part.charAt(0)).join('').substring(0, 2);
        }

        function formatContent(content) {
            if (!content) return '';
            return escapeHtml(content).replace(/\n/g, '<br>');
        }

        function escapeHtml(unsafe) {
            if (!unsafe) return '';
            return unsafe
                .replace(/&/g, "&amp;")
                .replace(/</g, "&lt;")
                .replace(/>/g, "&gt;")
                .replace(/"/g, "&quot;")
                .replace(/'/g, "&#039;");
        }

        function showLoading(show) {
            const loadingIndicator = document.getElementById('loadingIndicator');
            if (!loadingIndicator) return;

            if (show) {
                loadingIndicator.style.display = 'block';
            } else {
                loadingIndicator.style.display = 'none';
            }
        }

        function showError(message) {
            const forumContainer = document.getElementById('forumPosts');
            forumContainer.innerHTML = `
                <div class="error-message">
                    <i class="fas fa-exclamation-triangle"></i>
                    <span>${message}</span>
                </div>
            `;
        }
    </script>
</body>
</html>