@using Microsoft.AspNet.Identity
@model BusinessLayer.Battle
@{
    ViewData["Title"] = "Битка";
}
@section Styles {
    <link rel="stylesheet" href="~/css/battles.css" />
    <style>
        /* Battle Container */
        .battle-container {
            max-width: 800px;
            margin: 2rem auto;
            position: relative;
        }
        
        /* Battle Card */
        .battle-card {
            background: rgba(15, 23, 42, 0.8);
            backdrop-filter: blur(10px);
            border-radius: 1.5rem;
            border: 1px solid rgba(80, 80, 180, 0.2);
            box-shadow: 0 8px 32px rgba(0, 0, 50, 0.2);
            overflow: hidden;
            position: relative;
            transition: all 0.3s ease;
        }
        
        .battle-card::before {
            content: '';
            position: absolute;
            top: -2px;
            left: -2px;
            right: -2px;
            bottom: -2px;
            background: linear-gradient(45deg, #6366f1, #60a5fa, #6366f1);
            z-index: -1;
            border-radius: 1.5rem;
            opacity: 0.7;
            animation: gradientBorder 3s ease infinite;
            background-size: 200% 200%;
        }
        
        /* Header Section */
        .battle-header {
            padding: 2rem 2rem 1rem;
            border-bottom: 1px solid rgba(80, 80, 180, 0.2);
            position: relative;
        }
        
        .back-link {
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            color: #94a3b8;
            margin-bottom: 1rem;
            transition: color 0.2s;
        }
        
        .back-link:hover {
            color: #60a5fa;
        }
        
        .battle-title {
            font-size: 1.8rem;
            font-weight: 700;
            margin-bottom: 0.5rem;
            background: linear-gradient(90deg, #60a5fa, #818cf8);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }
        
        .battle-description {
            color: #94a3b8;
            line-height: 1.6;
            margin-bottom: 1.5rem;
        }
        
        /* Players Section */
        .players-container {
            display: flex;
            justify-content: space-around;
            align-items: center;
            padding: 2rem;
            position: relative;
        }
        
        .vs-badge {
            position: absolute;
            left: 50%;
            top: 50%;
            transform: translate(-50%, -50%);
            background: #1e293b;
            border: 2px solid #60a5fa;
            color: #60a5fa;
            width: 60px;
            height: 60px;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-weight: bold;
            font-size: 1.5rem;
            box-shadow: 0 0 15px rgba(96, 165, 250, 0.3);
            z-index: 2;
        }
        
        .player-card {
            display: flex;
            flex-direction: column;
            align-items: center;
            width: 40%;
            padding: 1.5rem;
            border-radius: 1rem;
            transition: all 0.3s ease;
            position: relative;
        }
        
        .player-card.empty {
            background: rgba(30, 41, 59, 0.5);
            border: 1px dashed rgba(80, 80, 180, 0.3);
        }
        
        .player-card.filled {
            background: rgba(30, 41, 59, 0.8);
            border: 1px solid rgba(80, 80, 180, 0.5);
            box-shadow: 0 5px 15px rgba(80, 80, 180, 0.1);
        }
        
        .player-avatar {
            width: 100px;
            height: 100px;
            border-radius: 50%;
            background: linear-gradient(135deg, #1e293b, #0f172a);
            display: flex;
            align-items: center;
            justify-content: center;
            margin-bottom: 1rem;
            position: relative;
            border: 3px solid #1e293b;
            box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
        }
        
        .player-avatar img {
            width: 100%;
            height: 100%;
            border-radius: 50%;
            object-fit: cover;
        }
        
        .player-avatar .avatar-placeholder {
            font-size: 2.5rem;
            color: #475569;
        }
        
        .player-name {
            font-weight: 600;
            font-size: 1.2rem;
            margin-bottom: 0.5rem;
            text-align: center;
        }
        
        .player-stats {
            display: flex;
            gap: 1rem;
            margin-top: 0.5rem;
        }
        
        .stat-badge {
            background: rgba(30, 41, 59, 0.8);
            border: 1px solid rgba(80, 80, 180, 0.3);
            border-radius: 50px;
            padding: 0.3rem 0.8rem;
            font-size: 0.8rem;
            display: flex;
            align-items: center;
            gap: 0.3rem;
        }
        
        /* Battle Meta Information */
        .battle-meta {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 1rem;
            padding: 1.5rem 2rem;
            background: rgba(15, 23, 42, 0.5);
            border-top: 1px solid rgba(80, 80, 180, 0.2);
        }
        
        .meta-item {
            display: flex;
            align-items: center;
            gap: 0.8rem;
        }
        
        .meta-icon {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: rgba(96, 165, 250, 0.1);
            display: flex;
            align-items: center;
            justify-content: center;
            color: #60a5fa;
        }
        
        .meta-content {
            flex: 1;
        }
        
        .meta-label {
            font-size: 0.8rem;
            color: #94a3b8;
            margin-bottom: 0.2rem;
        }
        
        .meta-value {
            font-weight: 600;
            color: #e2e8f0;
        }
        
        /* Battle Status Section */
        .battle-status {
            padding: 1.5rem 2rem;
            text-align: center;
            border-top: 1px solid rgba(80, 80, 180, 0.2);
        }
        
        .status-badge {
            display: inline-block;
            padding: 0.5rem 1.5rem;
            border-radius: 50px;
            font-weight: 600;
            font-size: 0.9rem;
        }
        
        .status-waiting {
            background: rgba(96, 165, 250, 0.1);
            color: #60a5fa;
            border: 1px solid rgba(96, 165, 250, 0.3);
        }
        
        .status-ready {
            background: rgba(22, 163, 74, 0.1);
            color: #16a34a;
            border: 1px solid rgba(22, 163, 74, 0.3);
        }
        
        .status-active {
            background: rgba(234, 179, 8, 0.1);
            color: #eab308;
            border: 1px solid rgba(234, 179, 8, 0.3);
        }
        
        .status-completed {
            background: rgba(236, 72, 153, 0.1);
            color: #ec4899;
            border: 1px solid rgba(236, 72, 153, 0.3);
        }
        
        .countdown {
            font-size: 1.2rem;
            font-weight: 600;
            color: #eab308;
            margin-top: 0.5rem;
            display: flex;
            align-items: center;
            justify-content: center;
            gap: 0.5rem;
        }
        
        /* Progress Bar */
        .progress-container {
            width: 100%;
            height: 6px;
            background: rgba(30, 41, 59, 0.5);
            border-radius: 3px;
            margin-top: 1rem;
            overflow: hidden;
        }
        
        .progress-bar {
            height: 100%;
            background: linear-gradient(90deg, #60a5fa, #818cf8);
            border-radius: 3px;
            transition: width 0.5s ease;
        }
        
        /* Players List */
        .players-list {
            display: flex;
            flex-wrap: wrap;
            gap: 0.5rem;
            justify-content: center;
            margin-top: 1rem;
        }
        
        .player-tag {
            background: rgba(30, 41, 59, 0.8);
            border: 1px solid rgba(80, 80, 180, 0.3);
            border-radius: 50px;
            padding: 0.3rem 0.8rem;
            font-size: 0.9rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }
        
        .player-tag-avatar {
            width: 20px;
            height: 20px;
            border-radius: 50%;
            background: #475569;
        }
        
        /* Battle Actions */
        .battle-actions {
            display: flex;
            justify-content: center;
            gap: 1rem;
            padding: 1.5rem 2rem;
            border-top: 1px solid rgba(80, 80, 180, 0.2);
        }
        
        .action-btn {
            padding: 0.8rem 2rem;
            border-radius: 50px;
            font-weight: 600;
            transition: all 0.3s ease;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
            border: none;
            cursor: pointer;
        }
        
        .btn-primary {
            background: linear-gradient(90deg, #6366f1, #60a5fa);
            color: white;
            box-shadow: 0 4px 15px rgba(96, 165, 250, 0.3);
        }
        
        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 6px 20px rgba(96, 165, 250, 0.4);
        }
        
        .btn-outline {
            background: transparent;
            border: 1px solid #60a5fa;
            color: #60a5fa;
        }
        
        .btn-outline:hover {
            background: rgba(96, 165, 250, 0.1);
        }
        
        .btn-disabled {
            background: #475569;
            color: #94a3b8;
            cursor: not-allowed;
        }
        
        /* Animations */
        @@keyframes gradientBorder {
            0% {
                background-position: 0% 50%;
            }
            50% {
                background-position: 100% 50%;
            }
            100% {
                background-position: 0% 50%;
            }
        }
        
        /* Responsive Design */
        @@media (max-width: 768px) {
            .players-container {
                flex-direction: column;
                gap: 2rem;
                padding: 1.5rem;
            }
            
            .player-card {
                width: 80%;
            }
            
            .vs-badge {
                position: relative;
                left: auto;
                top: auto;
                transform: none;
                margin: 1rem 0;
            }
            
            .battle-meta {
                grid-template-columns: 1fr;
            }
            
            .battle-actions {
                flex-direction: column;
            }
            
            .action-btn {
                width: 100%;
                justify-content: center;
            }
        }
    </style>
}
<div class="battle-container">
    <div class="battle-card">
        <div class="battle-header">
            <h1 class="battle-title">@Model.Title</h1>
            <p class="battle-description">@Model.Description</p>
            
            @{
                var progressPercent = 0;
                if (Model.EndDate > Model.StartDate)
                {
                    var totalSeconds = (Model.EndDate - Model.StartDate).TotalSeconds;
                    var elapsedSeconds = (DateTime.Now - Model.StartDate).TotalSeconds;
                    progressPercent = (int)((elapsedSeconds / totalSeconds) * 100);
                    progressPercent = Math.Max(0, Math.Min(100, progressPercent));
                }
            }
            @if (Model.StartDate < DateTime.Now)
            {
                
            <div class="progress-container">
                <div class="progress-bar" style="width: @progressPercent%"></div>
            </div>
            }
        </div>
        
        <div class="players-container">
            <!-- Player 1 Card -->
            <div class="player-card @(Model.FirstPlayer != null ? "filled" : "empty")">
                <div class="player-avatar">
                    @if (Model.FirstPlayer is null || Model.FirstPlayer.ProfilePicture.Length == 0)
                    {
                        <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                    }
                    else
                    {
                        <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                    }
                </div>
                <h3 class="player-name">@(Model.StartDate < DateTime.Now?Model.FirstPlayer?.UserName ?? "Търсене...":"Играч 1")</h3>
                @if (Model.FirstPlayer != null)
                {
                    <div class="player-stats">
                        <div class="stat-badge">
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                            </svg>
                            @(Model.FirstPlayer?.Points.ToString() ?? "-")
                        </div>
                    </div>
                }
            </div>
            
            <!-- VS Badge -->
            <div class="vs-badge">VS</div>
            
            <!-- Player 2 Card -->
            <div class="player-card @(Model.SecondPlayer != null ? "filled" : "empty")">
                <div class="player-avatar">
                    @if (Model.SecondPlayer is null || Model.SecondPlayer.ProfilePicture.Length == 0)
                    {
                        <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                    }
                    else
                    {
                        <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                    }
                </div>
                <h3 class="player-name">@(Model.StartDate < DateTime.Now?Model.SecondPlayer?.UserName ?? "Търсене...":"Играч 2")</h3>
                @if (Model.SecondPlayer != null)
                {
                    <div class="player-stats">
                        <div class="stat-badge">
                            <svg xmlns="http://www.w3.org/2000/svg" width="12" height="12" fill="currentColor" viewBox="0 0 16 16">
                                <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                            </svg>
                            @(Model.SecondPlayer?.Points.ToString() ?? "-")
                        </div>
                        
                    </div>
                }
            </div>
        </div>
        
        <!-- Battle Meta Information -->
        <div class="battle-meta">
            <div class="meta-item">
                <div class="meta-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                    </svg>
                </div>
                <div class="meta-content">
                    <div class="meta-label">НАЧАЛО</div>
                    <div class="meta-value">@Model.StartDate.ToString("dd.MM.yyyy, HH:mm")</div>
                </div>
            </div>
            
            <div class="meta-item">
                <div class="meta-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                    </svg>
                </div>
                <div class="meta-content">
                    <div class="meta-label">КРАЙ</div>
                    <div class="meta-value">@Model.EndDate.ToString("dd.MM.yyyy, HH:mm")</div>
                </div>
            </div>
            
            <div class="meta-item">
                <div class="meta-icon">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M3.612 15.443c-.386.198-.824-.149-.746-.592l.83-4.73L.173 6.765c-.329-.314-.158-.888.283-.95l4.898-.696L7.538.792c.197-.39.73-.39.927 0l2.184 4.327 4.898.696c.441.062.612.636.282.95l-3.522 3.356.83 4.73c.078.443-.36.79-.746.592L8 13.187l-4.389 2.256z"/>
                    </svg>
                </div>
                <div class="meta-content">
                    <div class="meta-label">Награда</div>
                    <div class="meta-value">@Model.RewardXP XP Точки</div>
                </div>
            </div>
        </div>
        
        <!-- Battle Status Section -->
        <div class="battle-status">
            @if (Model.EndDate<DateTime.Now)
            {
                <div class="status-badge status-completed">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" style="margin-right: 0.5rem;">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
                    </svg>
                    Битката Завърши
                </div>
                <div class="players-list" id="players-list">
                    @if (Model.FirstPlayer != null)
                    {
                        <div class="player-tag">
                            @if (Model.FirstPlayer is null || Model.FirstPlayer.ProfilePicture.Length == 0)
                            {
                                <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                            }
                            else
                            {
                                <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                            }
                            @Model.FirstPlayer?.FullName
                        </div>
                    }
                    @if (Model.SecondPlayer != null)
                    {
                        <div class="player-tag">
                            <div class="player-tag-avatar">
                                @if (Model.SecondPlayer is null || Model.SecondPlayer.ProfilePicture.Length == 0)
                                {
                                    <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                                }
                                else
                                {
                                    <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                                }                            </div>
                            @Model.SecondPlayer?.FullName
                        </div>
                    }
                </div>
            }
            else if (Model.FirstPlayer != null && Model.SecondPlayer != null)
            {
                <div class="status-badge status-ready">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16" style="margin-right: 0.5rem;">
                        <path d="M16 8A8 8 0 1 1 0 8a8 8 0 0 1 16 0zm-3.97-3.03a.75.75 0 0 0-1.08.022L7.477 9.417 5.384 7.323a.75.75 0 0 0-1.06 1.06L6.97 11.03a.75.75 0 0 0 1.079-.02l3.992-4.99a.75.75 0 0 0-.01-1.05z"/>
                    </svg>
                    Битката е Готова - 2/2 Играчи
                </div>
                <div class="countdown" id="countdown-timer">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8.515 1.019A7 7 0 0 0 8 1V0a8 8 0 0 1 .589.022l-.074.997zm2.004.45a7.003 7.003 0 0 0-.985-.299l.219-.976c.383.086.76.2 1.126.342l-.36.933zm1.37.71a7.01 7.01 0 0 0-.439-.27l.493-.87a8.025 8.025 0 0 1 .979.654l-.615.789a6.996 6.996 0 0 0-.418-.302zm1.834 1.79a6.99 6.99 0 0 0-.653-.796l.724-.69c.27.285.52.59.747.91l-.818.576zm.744 1.352a7.08 7.08 0 0 0-.214-.468l.893-.45a7.976 7.976 0 0 1 .45 1.088l-.95.313a7.023 7.023 0 0 0-.179-.483zm.53 2.507a6.991 6.991 0 0 0-.1-1.025l.985-.17c.067.386.106.778.116 1.17l-1 .025zm-.131 1.538c.033-.17.06-.339.081-.51l.993.123a7.957 7.957 0 0 1-.23 1.155l-.964-.267c.046-.165.086-.332.12-.501zm-.952 2.379c.184-.29.346-.594.486-.908l.914.405c-.16.36-.345.706-.555 1.038l-.845-.535zm-.964 1.205c.122-.122.239-.248.35-.378l.758.653a8.073 8.073 0 0 1-.401.432l-.707-.707z"/>
                        <path d="M8 1a7 7 0 1 0 4.95 11.95l.707.707A8.001 8.001 0 1 1 8 0v1z"/>
                        <path d="M7.5 3a.5.5 0 0 1 .5.5v5.21l3.248 1.856a.5.5 0 0 1-.496.868l-3.5-2A.5.5 0 0 1 7 9V3.5a.5.5 0 0 1 .5-.5z"/>
                    </svg>
                    <span id="countdown-text">Калкулиране...</span>
                </div>
            }
            else
            {
                    <div class="status-badge status-waiting">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor"
                             viewBox="0 0 16 16" style="margin-right: 0.5rem;">
                            <path
                                d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                            <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                        </svg>
                        @(Model.StartDate < DateTime.Now?$"Чакане за Играчи - {((Model.FirstPlayer != null ? 1 : 0) + (Model.SecondPlayer != null ? 1 : 0))}/2":"Подготви се...")
                    </div>

                <div class="players-list" id="players-list">
                    @if (Model.FirstPlayer != null)
                    {
                        <div class="player-tag">
                            <div class="player-tag-avatar">
                                @if (Model.FirstPlayer is null || Model.FirstPlayer.ProfilePicture.Length == 0)
                                {
                                    <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                                }
                                else
                                {
                                    <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                                }                            </div>
                            @Model.FirstPlayer?.FullName
                        </div>
                    }
                    @if (Model.SecondPlayer != null)
                    {
                        <div class="player-tag">
                            <div class="player-tag-avatar">
                                @if (Model.SecondPlayer.ProfilePicture.Length == 0)
                                {
                                    <span style="color: #f0f0f0" class="avatar-placeholder fa fa-user"></span>
                                }
                                else
                                {
                                    <img class="avatar-placeholder" alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.FirstPlayer.ProfilePicture)"/>
                                }                            </div>
                            @Model.SecondPlayer?.FullName
                        </div>
                    }
                </div>
            }
        </div>
        
        <!-- Battle Actions -->
        <div class="battle-actions justify-content-between">
            <a href="/Battles" class="action-btn btn-outline">
                <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                    <path fill-rule="evenodd" d="M15 8a.5.5 0 0 0-.5-.5H2.707l3.147-3.146a.5.5 0 1 0-.708-.708l-4 4a.5.5 0 0 0 0 .708l4 4a.5.5 0 0 0 .708-.708L2.707 8.5H14.5A.5.5 0 0 0 15 8z" />
                </svg>
                Назад
            </a>
            @if (Model.EndDate < DateTime.Now)
            {
                <a href="@Url.Action("Details", "Battles", new { id = Model.Id })" class="action-btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                        <path d="M8 13A5 5 0 1 1 8 3a5 5 0 0 1 0 10zm0-1A4 4 0 1 0 8 4a4 4 0 0 0 0 8z"/>
                        <path d="M8 6a2 2 0 1 1 0-4 2 2 0 0 1 0 4zm0 1a3 3 0 1 0 0-6 3 3 0 0 0 0 6z"/>
                    </svg>
                    Виж Резултатите
                </a>
            }
            else if ((Model.FirstPlayer == null || Model.SecondPlayer == null) && Model.StartDate < DateTime.Now)
            {
                <form asp-action="Details" asp-controller="Battles" method="post" asp-route-id="@Model.Id">
                    <button style="pointer-events:@(User.Identity.GetUserId() == Model.FirstPlayer?.Id || User.Identity.GetUserId() == Model.SecondPlayer?.Id?"none":"all")" id="join-battle-btn" type="submit" class="action-btn btn-primary">
                        <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                            <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                            <path d="M8 4a.5.5 0 0 1 .5.5v3h3a.5.5 0 0 1 0 1h-3v3a.5.5 0 0 1-1 0v-3h-3a.5.5 0 0 1 0-1h3v-3A.5.5 0 0 1 8 4z"/>
                        </svg>
                        Присъедини се към Битката
                    </button>
                </form>
            }
            else if (Model.StartDate > DateTime.Now)
            {
                <button class="action-btn btn-disabled" disabled>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 3.5a.5.5 0 0 0-1 0V9a.5.5 0 0 0 .252.434l3.5 2a.5.5 0 0 0 .496-.868L8 8.71V3.5z"/>
                        <path d="M8 16A8 8 0 1 0 8 0a8 8 0 0 0 0 16zm7-8A7 7 0 1 1 1 8a7 7 0 0 1 14 0z"/>
                    </svg>
                    Битката започва скоро
                </button>
            }
            else if (Model.EndDate > DateTime.Now)
            {
                <a href="@Url.Action("Start", "Battles", new { id = Model.Id })" class="action-btn btn-primary">
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="m11.596 8.697-6.363 3.692c-.54.313-1.233-.066-1.233-.697V4.308c0-.63.692-1.01 1.233-.696l6.363 3.692a.802.802 0 0 1 0 1.393z"/>
                    </svg>
                    Започни Битката
                </a>
            }
            else
            {
                <button class="action-btn btn-disabled" disabled>
                    <svg xmlns="http://www.w3.org/2000/svg" width="16" height="16" fill="currentColor" viewBox="0 0 16 16">
                        <path d="M8 15A7 7 0 1 1 8 1a7 7 0 0 1 0 14zm0 1A8 8 0 1 0 8 0a8 8 0 0 0 0 16z"/>
                        <path d="M4 8a.5.5 0 0 1 .5-.5h7a.5.5 0 0 1 0 1h-7A.5.5 0 0 1 4 8z"/>
                    </svg>
                    Битката Изтече
                </button>
            }


        </div>
    </div>
</div>
<script src="https://cdnjs.cloudflare.com/ajax/libs/microsoft-signalr/7.0.5/signalr.min.js"></script>
<script>
        const battleId = '@Model.Id';
        const userName = '@(User.Identity?.Name ?? "Потребител")';
        const connection = new signalR.HubConnectionBuilder()
            .withUrl("/battleHub?battleId=" + battleId)
            .build();
        connection.on("PlayersUpdated", function(players) {
            if (players.length === 1) {
                console.log("waiting")
            } else if (players.length === 2) {
                setTimeout(()=>{},10)
                window.location.href = `Battles/Start/${battleId}`
            }
        });
    </script>