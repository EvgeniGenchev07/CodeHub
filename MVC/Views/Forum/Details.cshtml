@model BusinessLayer.Forum    
@section Styles{
    <style>
        :root {
            --primary: #00f7ff;
            --secondary: #ff00e4;
            --dark: #0a0a1a;
            --darker: #050510;
            --light: #ffffff;
            --gray: #cccccc;
            --success: #27c93f;
            --warning: #ffbd2e;
            --danger: #ff5f56;
            --neon-glow: 0 0 10px var(--primary);
            --text-glow: 0 0 5px var(--primary);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
        }

        body {
            background-color: var(--dark);
            color: var(--light);
            overflow-x: hidden;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
        }

        /* Header */
        header {
            background-color: rgba(10, 10, 26, 0.9);
            backdrop-filter: blur(10px);
            padding: 15px 5%;
            position: sticky;
            top: 0;
            z-index: 100;
            border-bottom: 1px solid rgba(0, 247, 255, 0.2);
            display: flex;
            justify-content: space-between;
            align-items: center;
            flex-wrap: wrap;
        }

        .logo {
            display: flex;
            align-items: center;
            gap: 10px;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .logo-icon {
            color: var(--primary);
            text-shadow: var(--text-glow);
        }

        .logo-text {
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
        }

        .hamburger {
            display: none;
            font-size: 1.5rem;
            color: var(--primary);
            cursor: pointer;
            background: none;
            border: none;
            padding: 8px;
        }

        .nav-menu {
            display: flex;
            align-items: center;
            flex-grow: 1;
        }

        .nav-links {
            display: flex;
            list-style: none;
            gap: 20px;
        }

        .nav-links a {
            color: var(--gray);
            text-decoration: none;
            font-weight: 500;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
            padding: 8px 12px;
            border-radius: 20px;
        }

        .nav-links a:hover, .nav-links a.active {
            color: var(--primary);
            text-shadow: var(--text-glow);
            background-color: rgba(0, 247, 255, 0.1);
        }

        .user-actions {
            display: flex;
            gap: 15px;
        }

        /* Buttons */
        .btn {
            padding: 8px 20px;
            border-radius: 20px;
            font-weight: 500;
            cursor: pointer;
            transition: all 0.3s;
            display: flex;
            align-items: center;
            gap: 8px;
            border: none;
        }

        .btn-outline {
            background: transparent;
            border: 1px solid var(--primary);
            color: var(--primary);
        }

        .btn-outline:hover {
            background: rgba(0, 247, 255, 0.1);
            box-shadow: var(--neon-glow);
        }

        .btn-primary {
            background: linear-gradient(90deg, var(--primary), var(--secondary));
            color: var(--darker);
            font-weight: 600;
        }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 0 20px var(--primary);
        }

        /* Main Content */
        main {
            flex: 1;
            padding: 30px 5%;
            max-width: 1200px;
            margin: 0 auto;
            width: 100%;
        }

        /* Post Container */
        .post-container {
            background-color: rgba(10, 10, 26, 0.6);
            border: 1px solid rgba(0, 247, 255, 0.2);
            border-radius: 10px;
            padding: 30px;
            margin-bottom: 40px;
        }

        .post-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 20px;
        }

        .post-user {
            display: flex;
            align-items: center;
            gap: 15px;
        }

        .user-avatar {
            width: 60px;
            height: 60px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1.5rem;
            font-weight: bold;
        }

        .user-info h3 {
            font-size: 1.3rem;
            margin-bottom: 5px;
        }

        .user-info p {
            color: var(--gray);
            font-size: 0.9rem;
        }

        .post-time {
            color: var(--gray);
            font-size: 0.9rem;
        }

        .post-title {
            font-size: 2rem;
            margin-bottom: 20px;
            color: var(--primary);
        }

        .post-content {
            color: var(--gray);
            line-height: 1.7;
            margin-bottom: 30px;
        }

        .post-content pre {
            background-color: var(--darker);
            padding: 15px;
            border-radius: 5px;
            overflow-x: auto;
            margin: 15px 0;
            font-family: 'Courier New', Courier, monospace;
        }

        .post-content code {
            color: #7ee787;
            font-family: 'Courier New', Courier, monospace;
        }

        .post-actions {
            display: flex;
            gap: 15px;
            border-top: 1px solid rgba(0, 247, 255, 0.2);
            padding-top: 20px;
        }

        .post-stat {
            display: flex;
            align-items: center;
            gap: 5px;
            color: var(--gray);
            font-size: 0.9rem;
        }

        /* Comments Section */
        .comments-section {
            margin-top: 40px;
        }

        .section-title {
            font-size: 1.8rem;
            margin-bottom: 20px;
            color: var(--primary);
        }

        .comment-form {
            background-color: rgba(10, 10, 26, 0.6);
            border: 1px solid rgba(0, 247, 255, 0.2);
            border-radius: 10px;
            padding: 20px;
            margin-bottom: 30px;
        }

        .comment-form h3 {
            margin-bottom: 15px;
            font-size: 1.3rem;
        }

        .form-group {
            margin-bottom: 15px;
        }

        .form-group label {
            display: block;
            margin-bottom: 8px;
            color: var(--gray);
        }

        .form-group textarea {
            width: 100%;
            padding: 12px;
            border-radius: 5px;
            background-color: var(--darker);
            border: 1px solid rgba(0, 247, 255, 0.2);
            color: var(--light);
            resize: vertical;
            min-height: 120px;
        }

        .comment-list {
            display: grid;
            gap: 20px;
        }

        .comment-card {
            background-color: rgba(10, 10, 26, 0.6);
            border: 1px solid rgba(0, 247, 255, 0.2);
            border-radius: 10px;
            padding: 20px;
            transition: all 0.3s;
        }

        .comment-card:hover {
            border-color: var(--primary);
        }

        .comment-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 15px;
        }

        .comment-user {
            display: flex;
            align-items: center;
            gap: 10px;
        }

        .comment-avatar {
            width: 40px;
            height: 40px;
            border-radius: 50%;
            background: linear-gradient(135deg, var(--primary), var(--secondary));
            display: flex;
            justify-content: center;
            align-items: center;
            font-size: 1rem;
            font-weight: bold;
        }

        .comment-user-info h4 {
            font-size: 1rem;
            margin-bottom: 3px;
        }

        .comment-user-info p {
            color: var(--gray);
            font-size: 0.8rem;
        }

        .comment-time {
            color: var(--gray);
            font-size: 0.8rem;
        }

        .comment-content {
            color: var(--gray);
            line-height: 1.6;
            margin-bottom: 15px;
        }

        .comment-actions {
            display: flex;
            gap: 15px;
        }

        .comment-action {
            display: flex;
            align-items: center;
            gap: 5px;
            color: var(--gray);
            font-size: 0.8rem;
            cursor: pointer;
            transition: color 0.3s;
        }

        .comment-action:hover {
            color: var(--primary);
        }

        /* Responsive Design */
        @@media (max-width: 1024px) {
            .post-container {
                padding: 25px;
            }
            
            .post-title {
                font-size: 1.8rem;
            }
        }

        @@media (max-width: 768px) {
            header {
                padding: 15px;
            }

            .hamburger {
                display: block;
            }

            .nav-menu {
                display: none;
                position: absolute;
                top: 100%;
                left: 0;
                right: 0;
                background-color: rgba(10, 10, 26, 0.95);
                flex-direction: column;
                padding: 15px;
                border-top: 1px solid rgba(0, 247, 255, 0.2);
            }

            .nav-menu.active {
                display: flex;
            }

            .nav-links {
                flex-direction: column;
                gap: 10px;
                width: 100%;
            }

            .nav-links a {
                justify-content: center;
                padding: 12px;
            }

            .user-actions {
                flex-direction: column;
                gap: 10px;
                width: 100%;
                margin-top: 15px;
            }

            .post-header {
                flex-direction: column;
                align-items: flex-start;
                gap: 15px;
            }

            .post-time {
                align-self: flex-end;
            }

            .post-title {
                font-size: 1.6rem;
            }

            .user-avatar {
                width: 50px;
                height: 50px;
                font-size: 1.2rem;
            }
        }

        @@media (max-width: 480px) {
            main {
                padding: 20px 15px;
            }

            .post-container {
                padding: 20px;
            }

            .post-title {
                font-size: 1.4rem;
            }

            .post-content {
                font-size: 0.95rem;
            }

            .post-actions {
                flex-wrap: wrap;
            }

            .comment-form {
                padding: 15px;
            }

            .comment-card {
                padding: 15px;
            }
        }
    </style>
    }
    <main>
        <!-- Post Container -->
        <div class="post-container">
            <div class="post-header">
                <div class="post-user">
                    <div class="user-avatar">
                        @if (Model.Author.ProfilePicture.Length == 0)
                        {
                            <img alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Author.ProfilePicture)"/>
                        }
                        else
                        {
                            <span class="fa fa-user"></span>
                        }
                        </div>
                    <div class="user-info">
                        <h3>@Model.Author.UserName</h3>
                    </div>
                </div>
                <div class="post-time">@PostTime(@Model.Date)</div>
            </div>
            
            <h1 class="post-title">@Model.Title</h1>
            
            <div class="post-content">
                <p>@Model.Content</p>
                <pre><code>@Model.Code</code></pre>
            </div>
            
            <div class="post-actions">
                <div class="post-stat">
                    <i class="fas fa-comment"></i> @Model.Comments.Count коментара
                </div>
                <div class="post-stat">
                    <i class="fas fa-eye"></i> @Model.Views прегледа
                </div>
            </div>
        </div>
        
        <!-- Comments Section -->
        <div class="comments-section">
            <h2 class="section-title">Коментари</h2>
            
            <!-- Comment Form -->
            <div class="comment-form">
                <h3>Добави коментар</h3>
                <form asp-action="Details" asp-controller="Forum" method="post" id="commentForm">
                    <div class="form-group">
                        <input type="hidden" name="post-id" value="@Model.Id" />
                        <label for="comment">Твоят отговор</label>
                        <textarea id="comment" name="comment" placeholder="Напиши своя коментар тук..." required></textarea>
                    </div>
                    <button type="submit" class="btn btn-primary">Публикувай</button>
                </form>
            </div>
            
            <!-- Comment List -->
            <div class="comment-list">
                @foreach (var comment in Model.Comments)
                {
                    
                <!-- Comment 1 -->
                <div class="comment-card">
                    <div class="comment-header">
                        <div class="comment-user">
                            <div class="comment-avatar">
                                @if (comment.Author is not null)
                                {
                                    if (Model.Author.ProfilePicture.Length == 0)
                                    {
                                        <span style="color: #f0f0f0" class="fa fa-user"></span>
                                    }
                                    else
                                    {
                                        <img alt="" src="data:image/jpeg;base64,@Convert.ToBase64String(Model.Author.ProfilePicture)"/>
                                    }
                                }
                                else
                                {
                                    <div>A</div>
                                }
                            </div>
                            <div class="comment-user-info">
                                <h4>@(comment.Author is not null?comment.Author.UserName:"Anonymous")</h4>
                            </div>
                        </div>
                        <div class="comment-time">@PostTime(comment.Date)</div>
                    </div>
                    <div class="comment-content">
                        <p>@comment.Content</p>
                    </div>
                </div>
                }
            </div>
        </div>
    </main>

    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const commentCards = document.querySelectorAll('.comment-card');
            const observer = new IntersectionObserver((entries) => {
                entries.forEach(entry => {
                    if (entry.isIntersecting) {
                        entry.target.style.opacity = '1';
                        entry.target.style.transform = 'translateY(0)';
                    }
                });
            }, { threshold: 0.1 });

            commentCards.forEach(card => {
                card.style.opacity = '0';
                card.style.transform = 'translateY(20px)';
                card.style.transition = 'all 0.5s ease';
                observer.observe(card);
            });
        });
    </script>
    @{
        static string PostTime(DateTime postTime)
        {
            var timeSpan = DateTime.Now - postTime;

            if (timeSpan.TotalMinutes < 1)
                return "преди няколко секунди";
            if (timeSpan.TotalMinutes < 60)
                return $"преди {Math.Floor(timeSpan.TotalMinutes)} минути";
            if (timeSpan.TotalHours < 24)
                return $"преди {Math.Floor(timeSpan.TotalHours)} часа";
            if (timeSpan.TotalDays < 30)
                return $"преди {Math.Floor(timeSpan.TotalDays)} дни";
            if (timeSpan.TotalDays < 365)
                return $"преди {Math.Floor(timeSpan.TotalDays / 30)} месеца";

            return $"преди {Math.Floor(timeSpan.TotalDays / 365)} години";
        }
    }
